<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjr.dao.UserMapper">

    <resultMap id="userMap" type="com.sjr.model.User">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="passWord" jdbcType="VARCHAR" property="passWord" />
        <result column="realName" jdbcType="VARCHAR" property="realName" />
    </resultMap>

    <select id="selAll"  resultMap="userMap">
        select * from user
    </select>

    <select id="selUserByUserName" parameterType="java.lang.String" resultMap="userMap">
        select <include refid="userColumns"><property name="table_name" value="user"/></include>
        from `user` where userName like #{userName}
    </select>
    <insert id="insertByBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `user` (userName,passWord,realName)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.userName,jdbcType=VARCHAR},
            #{item.passWord,jdbcType=VARCHAR},
            #{item.realName,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <sql id="userColumns" > ${table_name}.userName,${table_name}.passWord,${table_name}.realName</sql>

    <update id="updateByBatch" parameterType="java.util.List">
            <foreach collection="list" item="l" separator=";" >
                update `user` set `userName`=#{l.userName},`password`=#{l.passWord},`realName`=#{l.realName} where id=#{l.id}
            </foreach>
    </update>
    
    
    <!--<resultMap id="UserResult" type="User" >-->
        <!--<id property="id" column="user_id"></id>-->
        <!--<result column="userName" property="userName"></result>-->
        <!--<result column="passWord" property="passWord"></result>-->
        <!--<result column="userName" property="userName"></result>-->
        <!--<collection property="courses" column="courses" >-->
            <!---->
        <!--</collection>-->
    <!--</resultMap>-->

</mapper>